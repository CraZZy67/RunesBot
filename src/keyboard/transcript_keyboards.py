from aiogram.utils.keyboard import InlineKeyboardBuilder


def dynamic_keyboard_transcript(page: int):
    pages = [["–£—Ä—É–∑", "–¢—É—Ä–∏—Å–∞–∑", "–†–∞–π–¥–æ", "–§–µ—Ö—É", "–ê–Ω–∑—É—Å", "–ö–µ–Ω–∞–∑"],
            ["–ì–µ–±–æ", "–•–∞–≥–∞–ª–∞—Å", "–ò—Å–∞", "–í—É–Ω—å–æ", "–ù–∞—É—Ç–∏–∑", "–ô–µ—Ä–∞"],
            ["–≠–π–≤–∞–∑", "–ê–ª—å–≥–∏–∑", "–¢–µ–π–≤–∞–∑", "–ü–µ—Ä—Ç", "–°–æ—É–ª—É", "–ë–µ—Ä–∫–∞–Ω–∞"],
            ["–≠–≤–∞–∑", "–õ–∞–≥—É–∑", "–û—Ç–∞–ª", "–ú–∞–Ω–Ω–∞–∑", "–ò–Ω–≥—É–∑", "–î–∞–≥–∞–∑"]]

    builder = InlineKeyboardBuilder()
    builder.button(text="üîé–ü–æ–∏—Å–∫ —Ä—É–Ω—ã –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é", callback_data="search")

    for i in pages[page]:
        builder.button(text=i[pages[page].index(i)], callback_data=f"{pages[page].index(i)}rune")

    if page == 0:
        builder.button(text="–î–∞–ª–µ–µ", callback_data="continue")
        builder.adjust(1, 2, 2, 2, 1)
        return builder.as_markup()
    elif page == 3:
        builder.button(text="–ù–∞–∑–∞–¥", callback_data="behind_transcript")
        builder.adjust(1, 2, 2, 2, 1)
        return builder.as_markup()

    builder.button(text="–ù–∞–∑–∞–¥", callback_data="behind_transcript")
    builder.button(text="–î–∞–ª–µ–µ", callback_data="continue")
    builder.adjust(1, 2, 2, 2, 2)

    return builder.as_markup()


def delete_message_keyboard():
    builder = InlineKeyboardBuilder()
    builder.button(text="üóë –£–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ")
    return builder.as_markup()
